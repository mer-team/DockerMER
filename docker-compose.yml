version: '3.7'
services:
  rabbit: 
    environment:
      RABBITMQ_DEFAULT_USER: merUser
      RABBITMQ_DEFAULT_PASS: passwordMER
      RABBITMQ_DEFAULT_VHOST: "/"
    image: "rabbitmq:3-management"
    deploy: 
      restart_policy:
        condition: on-failure
    ports:
      - "15672:15672"
      - "5672:5672"

  vidextrator:
    image: imagevideoextrator
    build:
      context: .
      dockerfile: vidextraction.Dockerfile
    volumes:
      - type: bind
        source: ./vagrant/Audios
        target: /vidExtrator/Audios
    restart: on-failure
    depends_on:
      - rabbit

  featextraction:
    image: mtgupf/essentia
    build:
      context: .
      dockerfile: featuresextraction.Dockerfile
    volumes:
      - type: bind
        source: ./vagrant/Audios
        target: /Audios
    restart: on-failure
    depends_on:
      - rabbit

  musicclass:
    image: python
    build:
      context: .
      dockerfile: classifymusic.Dockerfile
    restart: on-failure 
    volumes:
      - type: bind
        source: ./vagrant/MusicClassification/classification.txt
        target: /classification.txt
    depends_on:
      - rabbit
    
  db:
    image: mysql:5
    environment:
      MYSQL_ROOT_PASSWORD: teste
      MYSQL_DATABASE: mer
#    volumes:
#      - ./db.sql:/docker-entrypoint-initdb.d/dump.sql
#    ports:
#      - "3306:3306"

  api:
    build:
      context: .
      dockerfile: api.Dockerfile
    depends_on:
      - db
    ports:
      - "8000:8000"

  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    depends_on:
      - api
    ports:
      - "3000:3000"

volumes:
  audios:
  classifications: